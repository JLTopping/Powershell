Function Get-BitlockerPassword {
    [CmdletBinding(DefaultParameterSetName='ComputerName')] 
    param (
    [parameter(ValueFromPipeline=$true,ParameterSetName='ComputerName',Position=0)][Alias('CN')]$ComputerName, 
    [parameter(ParameterSetName='GUID')][string]$RecoveryID, 
    [parameter(ParameterSetName='ComputerName')][switch]$All, 
    $Server = $env:USERDNSDOMAIN
    )

    #Reset Local Variable
    $Password = $null

    #Create AD Object Filter
    $Splat = @{Properties = 'msfve-recoverypassword', 'created'}

    #Search AD Computer Object for Bitlocker Password
    switch ($PSCmdlet.ParameterSetName) {
        'ComputerName' {
            $ADComputer = Get-ADComputer $ComputerName -Server $Server
            $Splat.SearchBase = $ADComputer.distinguishedname
            $Splat.Filter = {objectclass -eq 'msFVE-RecoveryInformation'}
            $Splat.Properties = 'msfve-recoverypassword'
            $Recoveries = Get-ADObject @Splat -Server $Server} 
        'GUID' {
            if ($RecoveryID.Length -gt 8) {$RecoveryID = $RecoveryID.Substring(0,8)}
            $Splat.Filter = "objectclass -eq 'msFVE-RecoveryInformation' -and Name -Like '*{$RecoveryID-*}'"
            $Recoveries = Get-ADObject @Splat -Server $Server
            }
        } 
        
    #Iterate Through All Returned Passwords
    Foreach ($Recovery in $Recoveries) {
        
        #Parse Recovery Name into Key
        $RecoveryKey = $Recovery.name.substring($($Recovery.Name.IndexOf("{") + 1), 36)

        #Output Key and Password
        "Recovery Key : $RecoveryKey"
        "Recovery Password : $($Recovery.'msfve-RecoveryPassword')`n"
        }
    }