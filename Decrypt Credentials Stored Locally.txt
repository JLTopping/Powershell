#Credit to Unknown Source
Function ConvertFrom-CredentialFileToCredential {
	[CmdletBinding()]
	param (
	[Parameter(Mandatory = $true)][ValidateScript({Test-Path $_ })][ValidateNotNullOrEmpty()][string]$Path
	)

	$RawData = Get-Content $Path
	$xmlString = [Runtime.InteropServices.Marshal]::PtrToStringAuto([Runtime.InteropServices.Marshal]::SecureStringToBSTR((($rawData | ConvertTo-SecureString))))
	$Type = [PSObject].Assembly.GetType('System.Management.Automation.Deserializer')
	$Ctor = $type.GetConstructor('instance,nonpublic', $null, @([xml.xmlreader]), $null)
	$SR = New-Object System.IO.StringReader $xmlString
	$XR = New-Object System.Xml.XmlTextReader $SR
	$Deserializer = $Ctor.Invoke($XR)
	$Done = $type.GetMethod('Done', [System.Reflection.BindingFlags]'nonpublic,instance')

	while (!$type.InvokeMember("Done", "InvokeMethod,NonPublic,Instance", $null, $Deserializer, @())){
		try {
		$CredentialData = $type.InvokeMember("Deserialize", "InvokeMethod,NonPublic,Instance", $null, $deserializer, @())
		} catch	{
		Write-Warning "Could not deserialize ${string}: $_"
		}
	}

	$XR.Close()
	$SR.Dispose()
	$EncryptedPassword = $CredentialData.password | ConvertTo-SecureString
	New-Object System.Management.Automation.PSCredential($($CredentialData.username), $($EncryptedPassword))
} 